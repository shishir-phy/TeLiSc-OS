#!/bin/bash

while :
do
    trap "echo ;/usr/rbin/rshell; exit;" SIGINT
    #while true
    #do
    #        read -r -sn1 t
    #        case $t in
    #    	    A) tail -n 1 $HOME/.rshell_history ;;
    #    	    B) echo down ;;
    #    	    C) echo right ;;
    #    	    D) echo left ;;
    #        esac
    #done

    pth=$(pwd | tr "/" "\n" | tail -n 1)
    read -ep "$USER:$pth $ " one two three four five

    echo "$one $two $three $four $five" >> $HOME/.rshell_history

    err=0

    function check_path { 

	case "$1" in
	    /*)
		echo "::restricted::"
		err=1
		;;
    ./*)
        echo "::restricted::"
        err=1
        ;;
	    ..*)
		echo "::restricted::"
		err=1
		;;

	    esac
	}
	function check_keyword { 

	    case "$1" in
		bash)
		    echo "::restricted::"
		    err=1
		    ;;
		zsh)
		    echo "::restricted::"
		    err=1
		    ;;
		sh)
		    echo "::restricted::"
		    err=1
		    ;;
		ranger)
		    echo "::restricted::"
		    err=1
		    ;;
		#vim)
		#    echo "::restricted::"
		#    err=1
		#    ;;

		exit)
		    exit 0
		    ;;

		esac
	    }
	    function check_arguments {
		check_path $1
		check_keyword $1

	    }

	    #pth=$(pwd)
	    #echo "PWD: $pth"

	    [[ -z $one ]] && continue

        if [ $one == "sbatch" ] ; then
            case "$three+x" in
                x)
                    case "$two+x" in
                        x)
                            echo "No Job Script Specified!! Please try again." 
                            ;;
                        ./*)
                            sbatch $two
                            ;;
                        /*)
                            echo "::restriced::"
                            ;;
                        *)
                            echo "Error:sbatch:: sbatch argument must begin with ./"
                    esac
                    ;;
                *)
                    echo "Error:sbatch:: sbatch cannot have multiple argument!!"
                    continue
            esac
            continue
        fi

	    check_arguments $one
	    check_arguments $two
	    check_arguments $three
	    check_arguments $four
	    check_arguments $five

	    [[ $err -eq 1 ]] && continue


	    if [ $one == "cd" ] ; then
		case "$two+x" in
		    x)
			cd 
			;;
		    *)
			cd $two
			;;
		esac
		continue
	    fi

        if [ $one == "vim" ] ; then
		case "$two+x" in
		    x)
			echo "Error:vim:: No file name specified." 
			;;
		    *)
			vim $two
			;;
		esac
		continue
	    fi



	    /usr/bin/bash -c "$one $two $three $four $five"



	done



